[{"/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/index.js":"1","/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/reportWebVitals.js":"2","/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/App.js":"3","/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/PathfinderVisualizer/PathfinderVisualizer.js":"4","/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/Algorithms/BFS.js":"5","/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/PathfinderVisualizer/Node.js":"6","/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/Algorithms/DFS.js":"7","/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/Algorithms/Dijkstra.js":"8","/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/Algorithms/Astar.js":"9","/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/Algorithms/AStar.js":"10","/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/Algorithms/Greedy.js":"11"},{"size":543,"mtime":1609297087804,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1609233663401,"results":"14","hashOfConfig":"13"},{"size":272,"mtime":1609233765854,"results":"15","hashOfConfig":"13"},{"size":19136,"mtime":1609374840068,"results":"16","hashOfConfig":"13"},{"size":1739,"mtime":1609306165253,"results":"17","hashOfConfig":"13"},{"size":803,"mtime":1609300182523,"results":"18","hashOfConfig":"13"},{"size":1844,"mtime":1609310964647,"results":"19","hashOfConfig":"13"},{"size":1510,"mtime":1609316244291,"results":"20","hashOfConfig":"13"},{"size":1608,"mtime":1609314811006,"results":"21","hashOfConfig":"13"},{"size":1550,"mtime":1609317437822,"results":"22","hashOfConfig":"13"},{"size":2510,"mtime":1609318063085,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f8vcme",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},"/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/index.js",[],"/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/reportWebVitals.js",[],"/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/App.js",[],"/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/PathfinderVisualizer/PathfinderVisualizer.js",[],"/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/Algorithms/BFS.js",[],["48","49"],"/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/PathfinderVisualizer/Node.js",[],"/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/Algorithms/DFS.js",[],"/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/Algorithms/Dijkstra.js",[],"/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/Algorithms/Astar.js",[],"/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/Algorithms/AStar.js",[],"/Users/jamesshin/Documents/GitHub/PathfinderVisualizer/pathfinder-visualizer-james/src/Algorithms/Greedy.js",["50"],"export function Greedy(grid, startNode, finishNode) {\n    const visitedNodesInOrder = [];\n    let nextNodesStack = [startNode]\n    while (nextNodesStack.length) {\n        sortUnvisited(nextNodesStack)\n        const currNode = nextNodesStack.shift();\n        if (currNode === finishNode) return visitedNodesInOrder;\n        if (\n            !currNode.isWall &&\n            (currNode.isStart || !currNode.isVisited)\n            ) {\n                currNode.isVisited = true;\n                visitedNodesInOrder.push(currNode);\n                const {col, row} = currNode;\n                let nextNode;\n                if (row>0) {\n                    nextNode = grid[row-1][col]\n                    if (!nextNode.isVisited) {\n                        nextNode.previousNode = currNode;\n                        nextNodesStack.push(nextNode);\n                    }\n                }\n                if (row < grid.length - 1) {\n                    nextNode = grid[row+1][col];\n                    if (!nextNode.isVisited) {\n                        nextNode.previousNode = currNode;\n                        nextNodesStack.push(nextNode);\n                    }\n                }\n                if (col > 0) {\n                    nextNode = grid[row][col - 1];\n                    if (!nextNode.isVisited) {\n                      nextNode.previousNode = currNode;\n                      nextNodesStack.push(nextNode);\n                    }\n                  }\n                  if (col < grid[0].length - 1) {\n                    nextNode = grid[row][col + 1];\n                    if (!nextNode.isVisited) {\n                      nextNode.previousNode = currNode;\n                      nextNodesStack.push(nextNode);\n                    }\n                  }\n            }\n        \n    }\n}\n\nfunction sortUnvisited(unvisited) {\n    unvisited.sort((nodeA, nodeB) => nodeA.distanceToFinishNode - nodeB.distanceToFinishNode)\n}\n\nfunction updateUnvisitedNeighbors(node, grid) {\n    const neighbors = [];\n    const {col, row} = node;\n    if (row > 0) neighbors.push(grid[row - 1][col]);\n    if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n    if (col > 0) neighbors.push(grid[row][col - 1]);\n    if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n    const unvisitedNeighbors = neighbors.filter(neighbor => !neighbor.isVisited);\n    for (const neighbor of unvisitedNeighbors) {\n        neighbor.distance = node.distance + node.distanceToFinishNode;\n        neighbor.previousNode = node;\n    }\n}\n\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":53,"column":10,"nodeType":"57","messageId":"58","endLine":53,"endColumn":34},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'updateUnvisitedNeighbors' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]